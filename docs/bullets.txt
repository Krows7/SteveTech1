Owned by a gun and a player.
Fired by a client, that client (and every other client and the server) has control over its own position, movement and removal, although only the server calculates damaged.  No updates are sent by the server for it.  This has the advantage of speeding everything thing up and reducing update messages


* When a player shoots a bullet, they launch a new bullet entity and have full control over its path.  
* Pressing the fire button is ignored by the server: the client sends a AbilityActivatedMessage message to tell the server that a shot has been fired.
* When the server receives the "fired" command, it creates and fires its own projectile, and fast-forwards its position to where it should be in order for the server to be ahead of the shooting client, as per all other entities.
* The server sends a New Entity Message to all the clients saying that a bullet has been fired.  (The firing client ignores this message).
* The other clients then create and launch their own projectiles, and are again responsible for its position, movement and removal.  No updates are sent by the server for it.

AI:
These use the same bullet entities as players!

Notes:
* Bullets are created as required!



Player shoots:

Player: Creates own bullet
Server: Creates bullet and ffwds it
Other clients: Create remote bullet