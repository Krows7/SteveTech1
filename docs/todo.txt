STETECH1


URGENT
	Check jump force
Crate falling through floor
Only raise flags in onAction()
Player doesn't move when looking down - is this the same in simplephysics?
Search for todos
Hitscan weapons
Avatar warp test


TODO
Hello physics - set max move dist,
Create sep projects for test game, killer crates
Game settings: num players per side, max sides
Show current game time
Add lighting to hellophysics: floor_mat = new Material(game.getAssetManager(),"Common/MatDefs/Light/Lighting.j3md");  // create a simple material
Separate into AbstractEntityServer, AbstractGameServer, TestGameServer
Use latest JME libs
Grenades
Create game lobby
Walking up steps
	ConcurrentChange error in entities when firing grenade
Physics test - do explosion
Confirm source timings
Draw map
Show error if client unable to connect
Laser bullets
Am I adjusting rotation?
Server don't check for hit unless client thinks it has hit
Use test annotations
Add lots of comments
Unit test rewind avatars
Spectator mode
	Send ability updates to client, to confirm ammo etc...
Show where players are according to server (in realtime)
Create server-controlled moving item to check interpol
Create generic classes and test them
Reduce dependencies between classes
Make vars private/protected


LATER
Reduce object creation, including calls to clone()
Don't use broadcast()?s
Kick players who don't move
Use tpf to ensure clients/server run at same speed
Stop client if no comms for a while
client/server encryption
Make classes final
Physics - pushing
Test with cheating client
User enter name and ip address
Only send entity messages to players that have joined the game


=======================================

CLIENT
Send inputs every "server tickrate"
Render others from history - 100ms ago, lerp between historical positions


SERVER
Receive player inputs and pass the to avatar (if later than prev)
Run game loop every 20ms
	Send entity positions for changed entities


PLAYER CONTROL
Turning is handled entirely by the client
Player moves and their avatar is moved immediately
	Client sends input to server
	Server calcs position of the client
	Server sends back position of all entities
	Client corrects itself based on servers position
Player shooting
	Client sends shot msg with timestamp and direction
	Server moves players to correct position and checks the client has hit
	 
	
