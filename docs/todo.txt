STETECH1

TODO
Compare client pos-rtt against server pos of same time
The positionCalcs in the client's avatar for client & server positions should be the same
Unit test poscalc using the same list each time
Jumping - screen is not updated
Use Executor for running threads
	Unit test position client avatar based on history and client position history
Unit test ping message & calcs
	Even with msg delay, client and server time should be the same?
Create generic classes and test them
Log positions of avatar and analyse?
	Adjust clients position in the direction of the "correct" position, but only by a small bit
Search for todos
	Client jumping back since we're comparing what the server sent 100ms ago
Reduce dependencies between classes
Treat bullets like players avatar
Test with 2 players and see if I can see the other avatar
Create server-controlled moving item to check interpol
Shooting
Delib slow down messages
Make all objects kinematic on client side?
Move entities to shared package


UNIT TESTS / INTEGRATION TESTS
Test interpolation


CLIENT
Send inputs every "server tickrate"
Render others from history - 50ms ago, lerp between historical positions


SERVER
Receive player inputs and pass the to avatar (if later than prev)
Run game loop every 20ms
	Send entity positions for changed entities


PLAYER CONTROL
Turning is handled entirely by the client
Player moves and their avatar is moved immediately
	Client sends input to server
	Server calcs position of the client
	Server sends back position of all entities
	Client corrects itself based on servers position
Player shooting
	Client sends shot msg with timestamp and direction
	Server moves players to correct position and checks the client has hit
	 
	
LATER
Don't send entity update if position not changed
Split up into separate packages: AbstractClient, Abstractserver, shared, Sorcerers
Reduce object creation
Kick players who don't move
Use tpf to ensure clients/server run at same speed
Stop client if no comms for a while
client/server encryption
Make classes final

